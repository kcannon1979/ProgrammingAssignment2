serIRs <- IRs[,IRs$HMIS.Serious.Incident.Ind == TRUE]
View(serIRs)
View(serIRs)
serIRs <- IRs[,IRs$HMIS.Serious.Incident.Ind = TRUE]
serIRs <- IRs[IRs$HMIS.Serious.Incident.Ind == TRUE,]
View(serIRs)
serIRs <- IRs[IRs$HMIS.Serious.Incident.Ind == Yes,]
serIRs <- IRs[IRs$HMIS.Serious.Incident.Ind == "Yes",]
View(serIRs)
histdeaths <- hist(serIRs$Total.Hazmat.Fatalities, breaks = 10)
histdeaths <- hist(serIRs$Total.Hazmat.Fatalities)
histinjs <- hist(serIRs$Total.Hazmat.Injuries, breaks = 10)
histinjs <- hist(serIRs$Total.Hazmat.Injuries, breaks = 50)
histinjs <- hist(serIRs$Total.Hazmat.Injuries)
histinjs <- hist(serIRs$Total.Hazmat.Injuries, breaks = 20)
histinjs <- hist(serIRs$Total.Hazmat.Injuries, breaks = 10)
histinjs <- hist(serIRs$Total.Hazmat.Injuries, breaks = 5)
histdeaths <- hist(serIRs$Total.Hazmat.Fatalities)
histdeaths <- density(serIRs$Total.Hazmat.Fatalities)
histdeaths <- graph(density(serIRs$Total.Hazmat.Fatalities))
histdeaths <- plot(density(serIRs$Total.Hazmat.Fatalities))
library(ggplot2)
histdeaths <- qplotserIRs$Total.Hazmat.Fatalities)
histdeaths <- qplot(serIRs$Total.Hazmat.Fatalities)
histdeaths <- qplot(serIRs$Total.Hazmat.Fatalities)
histdeaths <- qplot(serIRs$Total.Hazmat.Fatalities, data=serIRs, binwidth = 1)
histdeaths <- qplot(Total.Hazmat.Fatalities, data=serIRs, binwidth = 1)
histinjs <- hist(serIRs$Total.Hazmat.Injuries, breaks = 5)
histdeaths <- qplot(Total.Hazmat.Fatalities, data=serIRs)
#Histogram of Injuries
histdeaths <- qplot(Total.Hazmat.Fatalities, data=serIRs)
histdeaths
histdeaths <- qplot(serIRs$Total.Hazmat.Fatalities)
histdeaths
histinjs <- qplot(serIRs$Total.Hazmat.Injuries)
histinjs
#Histogram of Injuries
histinjs <- qplot(serIRs$Total.Hazmat.Injuries, binwidth = 20)
histinjs
#Histogram of Injuries
histinjs <- qplot(serIRs$Total.Hazmat.Injuries, binwidth = 1)
histinjs
#Histogram of deaths
histdeaths <- qplot(serIRs$Total.Hazmat.Fatalities, binwidth = 1)
histdeaths
#Histogram of deaths
histdeaths <- ggplot(serIRs$Total.Hazmat.Fatalities, aes(x=Total Hazmat Fatalities)) + geom_histogram(binwidth = 1)
histdeaths
#Histogram of deaths
histdeaths <- ggplot(serIRs$Total.Hazmat.Fatalities, aes(x="Total Hazmat Fatalities")) + geom_histogram(binwidth = 1)
histdeaths
#Histogram of deaths
histdeaths <- ggplot(serIRs, aes(x=Total.Hazmat.Fatalities)) + geom_histogram(binwidth = 1)
histdeaths
histdeaths <- ggplot(serIRs, aes(x=Total.Hazmat.Fatalities)) + geom_histogram(binwidth = 1, fill=rainbow(3))
histdeaths
help(geom_histogram)
histdeaths <- ggplot(serIRs, aes(x=Total.Hazmat.Fatalities)) + geom_histogram(binwidth = 1, aes(fill=rainbow(3)))
histdeaths
histdeaths <- ggplot(serIRs, aes(x=Total.Hazmat.Fatalities)) + geom_histogram(binwidth = 1, aes(fill=rainbow(1)))
histdeaths
histdeaths <- ggplot(serIRs, aes(x=Total.Hazmat.Fatalities)) + geom_histogram(binwidth = 1, aes(fill=rainbow(2)))
histdeaths
histdeaths <- ggplot(serIRs, aes(x=Total.Hazmat.Fatalities)) + geom_histogram(binwidth = 1, aes(fill=rainbow(1)))
histdeaths <- ggplot(serIRs, aes(x=Total.Hazmat.Fatalities)) + geom_histogram(binwidth = 1, aes(fill=rainbow(1)))
histdeaths
histinjs <- ggplot(serIRs, aes(x=Total.Hazmat.Injuries)) + geom_histogram(binwidth = 1, aes(fill=rainbow(1)))
histinjs
histinjs <- ggplot(serIRs, aes(x=Total.Hazmat.Injuries)) + geom_histogram(binwidth = 1, aes(fill=heat.colors(1)))
histinjs
histinjs <- ggplot(serIRs, aes(x=Total.Hazmat.Injuries)) + geom_histogram(binwidth = 1, aes(fill=terrain.colors(1)))
histinjs
library(lattice)
histclass <- splom(Total.Hazmat.Fatalities, groups=Hazardous.Class.Code, data=serIRs, panel=panel.superpose, columns=3)
histclass
histclass <- splom("Total.Hazmat.Fatalities", groups="Hazardous.Class.Code", data=serIRs, panel=panel.superpose, columns=3)
histclass
class(IRs$Total.Hazmat.Fatalities)
class(IRs$Hazardous.Class.Code)
histclass <- splom(Total.Hazmat.Fatalities, groups=Hazardous.Class.Code, data=serIRs, panel=panel.superpose, columns=3)
histclass
histclass <- splom(serIRs$Total.Hazmat.Fatalities, groups=Hazardous.Class.Code, data=serIRs, panel=panel.superpose, columns=3)
histclass
histclass <- splom(as.factor(serIRs$Total.Hazmat.Fatalities), groups=as.factor(Hazardous.Class.Code), data=serIRs, panel=panel.superpose, columns=3)
histclass
histclass <- splom(as.factor(serIRs$Total.Hazmat.Fatalities), groups=as.factor(Hazardous.Class.Code),
data=serIRs, columns=3)
histclass
histclass <- splom(serIRs$Total.Hazmat.Fatalities, groups=as.factor(Hazardous.Class.Code),
data=serIRs, columns=3)
histclass
histclass <- pairs(~Total.Hazmat.Fatalities + as.factor(Hazardous.Class.Code),
data=serIRs)
histclass
histclass <- pairs(~Total.Hazmat.Fatalities + Hazardous.Class.Code,
data=serIRs)
histclass
#HIstogram of Deaths & Injuries 0n Hazardous Class Code
histclass <- pairs(~Total.Hazmat.Fatalities + Total.Hazmat.Injuries + Hazardous.Class.Code,
data=serIRs)
histclass
#HIstogram of Deaths & Injuries 0n Hazardous Class Code
histclass <- pairs(~Total.Hazmat.Fatalities + Total.Hazmat.Injuries + Hazardous.Class.Code,
labels = c("Hazmat Fatalities", "Hazmat Injuries","Hazard Class"),data=serIRs)
histclass
#HIstogram of Deaths & Injuries 0n Hazardous Class Code
histclass <- pairs(~Total.Hazmat.Fatalities + Total.Hazmat.Injuries + Hazardous.Class.Code,
labels = c("Hazmat Fatalities", "Hazmat Injuries","Hazard Class"),data=serIRs)
#HIstogram of Deaths & Injuries 0n Hazardous Class Code
histclass <- pairs(~Total.Hazmat.Fatalities + Total.Hazmat.Injuries + Hazardous.Class.Code,
labels = c("Hazmat Fatalities", "Hazmat Injuries","Hazard Class"),data=serIRs)
rm(histclass)
gc()
#Histogram of deaths
histdeaths <- ggplot(serIRs, aes(x=Total.Hazmat.Fatalities)) + geom_histogram(binwidth = 1, aes(fill=rainbow(1)))
histdeaths
#Histogram of Injuries
histinjs <- ggplot(serIRs, aes(x=Total.Hazmat.Injuries)) + geom_histogram(binwidth = 1, aes(fill=terrain.colors(1)))
histinjs
gevdeaths <- gev.fit(serIRs$Total.Hazmat.Fatalities)
library("ismev", lib.loc="~/R/win-library/3.2")
gevdeaths <- gev.fit(serIRs$Total.Hazmat.Fatalities)
summary(gev.fit)
summary(gev.fit())
gev.fit()
gev.fit
gevdeaths <- gev.fit(serIRs$Total.Hazmat.Fatalities, method = "Nelder-Mead")
gevdeaths <- gev.fit(serIRs$Total.Hazmat.Fatalities, method = "Nelder-Mead", Hessian = FALSE)
gevdeaths <- gev.fit(serIRs$Total.Hazmat.Fatalities, method = "Nelder-Mead", hessian = FALSE)
library("extRemes", lib.loc="~/R/win-library/3.2")
gevdeaths <- fevd(serIRs$Total.Hazmat.Fatalities, data=serIRs)
gevdeaths <- fevd(serIRs$Total.Hazmat.Fatalities, data=serIRs, na.action=na.ignore)
gevdeaths <- fevd(serIRs$Total.Hazmat.Fatalities, data=serIRs, na.action=na.exclude)
gevdeaths <- fevd(Total.Hazmat.Fatalities, data=serIRs, na.action=na.exclude)
gevdamagess <- fevd(Total.Amount.of.Damages, data=serIRs, na.action=na.exclude)
gevdamages <- fevd(Total.Amount.of.Damages, data=serIRs, na.action=na.exclude, initial=1000)
gevdamages <- fevd(Total.Amount.of.Damages, data=serIRs)
View(serIRs)
View(serIRs$Total.Amount.of.Damages)
gevdamages <- fevd(Total.Amount.of.Damages, data=serIRs, na.action=na.exclude, threshold = 1000, type = "GEV")
gevdamages <- fevd(Total.Amount.of.Damages, data=serIRs, na.action=na.exclude, threshold = 1000, type = "GP")
fevd
#Read in Incident Reports
source('C:/Users/Ken/Desktop/Analyze Hazmat IRs - 2009-2014.R', echo=TRUE)
summary(serIRs$Total.Hazmat.Fatalities)
summary(serIRs$Total.Hazmat.Injuries)
summary(as.factor(serIRs$Hazardous.Class.Code))
summary(serIRs)
library(ggplot2)
library(extRemes)
library(ismev)
#Read in Incident Reports
serIRs <- read.csv("C:/Users/Ken/Desktop/IncidentReports - Serious - 2011 to 2014.csv", header = TRUE)
#Histogram of deaths
histdeaths <- ggplot(serIRs, aes(x=Total.Hazmat.Fatalities)) + geom_histogram(binwidth = 1, aes(fill=rainbow(1)))
histdeaths
#Histogram of Injuries
histinjs <- ggplot(serIRs, aes(x=Total.Hazmat.Injuries)) + geom_histogram(binwidth = 1, aes(fill=terrain.colors(1)))
histinjs
#HIstogram of Deaths & Injuries 0n Hazardous Class Code
histclass <- pairs(~Total.Hazmat.Fatalities + Total.Hazmat.Injuries + Hazardous.Class.Code,
labels = c("Hazmat Fatalities", "Hazmat Injuries","Hazard Class"),data=serIRs)
#GEV fit of Damages
gevdamages <- fevd(Total.Amount.of.Damages, data=serIRs, na.action=na.exclude, threshold = 10000, type = "GP")
gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 10000)
gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 1000)
gpdTotDam <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 1000)
gpdTotDam$mle
summary(gpdTotDam)
plot(gpdTotDam)
help(plot)
help(plot)
plot(gpdTotDam, y=(10000:50000))
gpdTotDam$Data
gpdTotDam$data
gpdTotDam$vals
qqplot(gpdTotDam)
qqline(gpdTotDam)
qqline(gpdTotDam, serIRs$Total.Damages.of.Incident)
qqline(gpdTotDam$data, serIRs$Total.Damages.of.Incident)
gpdTotDam$vals
gpdTotDam$mle
gpdTotDam <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 10000)
gpd.diag(gpdTotDam)
gpdTotDam <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 1000)
gpd.diag(gpdTotDam)
gpdTotDam <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 50000)
gpd.diag(gpdTotDam)
load("C:/Users/Ken/Google Drive/Paper - Hazmat Incident Data/Analyze Lithium Battery IRs - 2004-2014.R.RData")
View(LBIs)
histclass
histdeaths
gpdTotDam
library("rattle", lib.loc="~/R/win-library/3.2")
rattle()
class(gpdTotDam)
class(gpd.fit)
class("gpd.fit")
library("ismev", lib.loc="~/R/win-library/3.2")
library(ggplot2)
library(extRemes)
library(ismev)
#Read in Incident Reports
serIRs <- read.csv("C:/Users/Ken/Desktop/IncidentReports - Serious - 2011 to 2014.csv", header = TRUE)
#Histogram of deaths
histdeaths <- ggplot(serIRs, aes(x=Total.Hazmat.Fatalities)) + geom_histogram(binwidth = 1, aes(fill=rainbow(1)))
histdeaths
#Histogram of Injuries
histinjs <- ggplot(serIRs, aes(x=Total.Hazmat.Injuries)) + geom_histogram(binwidth = 1, aes(fill=terrain.colors(1)))
histinjs
#HIstogram of Deaths & Injuries 0n Hazardous Class Code
histclass <- pairs(~Total.Hazmat.Fatalities + Total.Hazmat.Injuries + Hazardous.Class.Code,
labels = c("Hazmat Fatalities", "Hazmat Injuries","Hazard Class"),data=serIRs)
#GEV fit of Damages
gevdamages <- fevd(Total.Amount.of.Damages, data=serIRs, na.action=na.exclude, threshold = 10000, type = "GP")
#GPD fit of Damages, $1,000, $10,000 and $50,000 thresholds
gpdTotDam1000 <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 1000)
gpdTotDam10000 <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 10000)
gpdTotDam50000 <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 50000)
gev.diag(c(gpdTotDam1000, gpdTotDam10000, gpdTotDam50000))
gev.diag(gpdTotDam1000)
gev.diag(gpdTotDam10000)
gev.diag(gpdTotDam50000)
gpdTotDam1000 <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 1000)
gpdTotDam10000 <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 10000)
gpdTotDam50000 <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 50000)
gev.diag(gpdTotDam1000)
serIRs <- read.csv("C:/Users/Ken/Google Drive/Paper - Hazmat Incident Data/IncidentReports - Serious - 2011 to 2014.csv", header = TRUE)
#Histogram of deaths
histdeaths <- ggplot(serIRs, aes(x=Total.Hazmat.Fatalities)) + geom_histogram(binwidth = 1, aes(fill=rainbow(1)))
histdeaths
#Histogram of Injuries
histinjs <- ggplot(serIRs, aes(x=Total.Hazmat.Injuries)) + geom_histogram(binwidth = 1, aes(fill=terrain.colors(1)))
histinjs
#HIstogram of Deaths & Injuries 0n Hazardous Class Code
histclass <- pairs(~Total.Hazmat.Fatalities + Total.Hazmat.Injuries + Hazardous.Class.Code,
labels = c("Hazmat Fatalities", "Hazmat Injuries","Hazard Class"),data=serIRs)
#GEV fit of Damages
gevdamages <- fevd(Total.Amount.of.Damages, data=serIRs, na.action=na.exclude, threshold = 10000, type = "GP")
#GPD fit of Damages, $1,000, $10,000 and $50,000 thresholds
gpdTotDam1000 <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 1000)
gpdTotDam10000 <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 10000)
gpdTotDam50000 <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 50000)
gev.diag(gpdTotDam1000)
gev.diag(gpdTotDam10000)
gev.diag(gpdTotDam50000)
gpd.diag(gpdTotDam1000)
gpd.diag(gpdTotDam10000)
gpd.diag(gpdTotDam50000)
gpdTotDam50000 <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 100000)
gpd.diag(gpdTotDam100000)
gpdTotDam100000 <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 100000)
gpd.diag(gpdTotDam100000)
gpdTotDam50000 <- gpd.fit(serIRs$Total.Amount.of.Damages, threshold = 50000)
help(ifelse)
library("boot", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("class", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("cluster", lib.loc="C:/Program Files/R/R-3.2.0/library")
help(apply)
help(sapply)
help("as.matrix")
help("as.factor")
help(table)
table(serIRs$Total.Hazmat.Injuries, serIRs$Total.Hazmat.Fatalities)
cor(serIRs$Total.Hazmat.Injuries, serIRs$Total.Hazmat.Fatalities)
cor(serIRs$Total.Hazmat.Injuries, serIRs$Total.Amount.of.Damages)
cor(serIRs$Total.Hazmat.Fatalities, serIRs$Total.Amount.of.Damages)
install.packages("glmnet")
library("glmnet", lib.loc="~/R/win-library/3.2")
library("glmnet", lib.loc="~/R/win-library/3.2")
install.packages("hdm")
install.packages("hdm", repos="http://R-Forge.R-project.org")
library("hdm", lib.loc="~/R/win-library/3.2")
source('C:/Users/Ken/Google Drive/Paper - Hazmat Incident Data/Analyze Lithium Battery IRs.R', echo=TRUE)
source('C:/Users/Ken/Google Drive/Paper - Hazmat Incident Data/Analyze Lithium Battery IRs.R', echo=TRUE)
#GPD fit of Damages, $1,000, $10,000 and $50,000 thresholds
gpdTotDam1000 <- gpd.fit(LBs$Total.Amount.of.Damages, threshold = 1000)
gpdTotDam10000 <- gpd.fit(LBs$Total.Amount.of.Damages, threshold = 10000)
gpdTotDam50000 <- gpd.fit(LBs$Total.Amount.of.Damages, threshold = 50000)
gpdTotDam100000 <- gpd.fit(LBs$Total.Amount.of.Damages, threshold = 100000)
#Diagnostic plots of GPD fits
gpd.diag(gpdTotDam1000)
gpd.diag(gpdTotDam10000)
gpd.diag(gpdTotDam50000)
gpd.diag(gpdTotDam100000)
#GPD fit of Damages, $1,000, $10,000 and $50,000 thresholds
gpdTotDam1000 <- gpd.fit(LBs$Total.Amount.of.Damages, threshold = 1000)
gpdTotDam10000 <- gpd.fit(LBs$Total.Amount.of.Damages, threshold = 10000)
gpdTotDam50000 <- gpd.fit(LBs$Total.Amount.of.Damages, threshold = 50000)
gpdTotDam100000 <- gpd.fit(LBs$Total.Amount.of.Damages, threshold = 100000)
#Diagnostic plots of GPD fits
gpd.diag(gpdTotDam1000)
gpd.diag(gpdTotDam10000)
gpd.diag(gpdTotDam50000)
gpd.diag(gpdTotDam100000)
source('C:/Users/Ken/Google Drive/Paper - Hazmat Incident Data/Analyze Lithium Battery IRs.R', echo=TRUE)
gpd.diag(gpdTotDam1000, title("GPD Diagnostic Plot for $1,000 Threshold"))
gpd.diag(gpdTotDam1000, title(GPD Diagnostic Plot for $1,000 Threshold))
gpdrange <- gpd.fitrange(LBs$Total.Amount.of.Damages, 1000, 100000)
gpdrange <- gpd.fitrange(LBs$Total.Amount.of.Damages, 1000, 100000)
gpdrange <- gpd.fitrange(LBs$Total.Amount.of.Damages, 1000, 10000)
gpdrange <- gpd.fitrange(LBs$Total.Amount.of.Damages, 1000, 5000)
gpdrange <- gpd.fitrange(LBs$Total.Amount.of.Damages, 1000, 2500)
gpd.diag(gpdTotDam1000)
gpd.diag(gpdTotDam10000)
gpd.diag(gpdTotDam50000)
gpd.diag(gpdTotDam100000)
library("ismev", lib.loc="~/R/win-library/3.2")
library("evd", lib.loc="~/R/win-library/3.2")
test1000 <- ks.test(LBs$Total.Amount.of.Damages, gpdTotDam1000, scale = 29805.685290, shape = 2.124782)
test1000 <- ks.test(LBs$Total.Amount.of.Damages, "gpdTotDam1000", scale = 29805.685290, shape = 2.124782)
test1000 <- ks.test(LBs$Total.Amount.of.Damages, pgpd, scale = 29805.685290, shape = 2.124782)
test50000 <- ks.test(LBs$Total.Amount.of.Damages, pgpd, scale = 2278532.04776, shape = -1.60748)
library("lmtest", lib.loc="~/R/win-library/3.2")
lm(Total.Amount.of.Damages ~ as.factor(Hazardous.Class.Code) + as.factor(HMIS.Container.Code), data=LBs)
lm(Total.Amount.of.Damages ~ as.factor(Hazardous.Class.Code) , data=LBs)
lm(Total.Amount.of.Damages ~ as.factor(Identification.Number) + as.factor(HMIS.Container.Code), data=LBs)
y < -lm(Total.Amount.of.Damages ~ as.factor(Identification.Number) + as.factor(HMIS.Container.Code), data=LBs)
y <- lm(Total.Amount.of.Damages ~ as.factor(Identification.Number) + as.factor(HMIS.Container.Code), data=LBs)
y
summary(y)
library("foreach", lib.loc="~/R/win-library/3.2")
library("glmnet", lib.loc="~/R/win-library/3.2")
plot(y$residuals)
hist(y$residuals)
plot(density(y$residuals))
y <- lm(Total.Amount.of.Damages ~ as.factor(Identification.Number) + as.factor(HMIS.Container.Code) + as.factor(Undeclared.Shipment), data=LBs)
summary(y)
plot(y$residuals)
save.image("C:/Users/Ken/Google Drive/Paper - Hazmat Incident Data/Analyze Lithium Battery IRs.R.RData")
library("quantreg", lib.loc="~/R/win-library/3.2")
source('C:/Users/Ken/Google Drive/Paper - Hazmat Incident Data/Analyze Lithium Battery IRs.R', echo=TRUE)
print(z)
summary(z, se = "boot")
z <- rq(Total.Amount.of.Damages ~ as.factor(Identification.Number) + as.factor(HMIS.Container.Code) +
as.factor(Transportation.Phase) + as.factor(Mode.of.Transportation) + as.numeric(Date.of.Incident) +
Time.of.Incident + Quantity.Released + as.factor(Undeclared.Shipment), tau = 0.5, data=LBs)
summary(z, se = "boot")
load("C:/Users/Ken/Google Drive/Paper - SD Methods/SD Methods Paper Workspace.RData")
View(pop.chars.prpf.ami.smi.2012)
View(smi.dupersids)
View(prpf.2012)
View(prpf.2011)
source('C:/Users/Ken/Google Drive/Paper - SD Methods/SD Methods Paper - R Script.R', echo=TRUE)
source('C:/Users/Ken/Google Drive/Paper - SD Methods/SD Methods Paper - R Script.R', echo=TRUE)
install.packages("survey")
source('C:/Users/Ken/Google Drive/Paper - SD Methods/SD Methods Paper - R Script.R', echo=TRUE)
install.packages("bsts")
library("bsts", lib.loc="~/R/win-library/3.2")
install.packages("spikeslab")
library("pcalg", lib.loc="~/R/win-library/3.2")
source("http://bioconductor.org/biocLite.R")
biocLite("graph")
library("pcalg", lib.loc="~/R/win-library/3.2")
source("http://bioconductor.org/biocLite.R")
biocLite("RBGL")
library("pcalg", lib.loc="~/R/win-library/3.2")
library("bnlearn", lib.loc="~/R/win-library/3.2")
install.packages("descr")
library("bnlearn", lib.loc="~/R/win-library/3.2")
detach("package:bnlearn", unload=TRUE)
library("bnlearn", lib.loc="~/R/win-library/3.2")
detach("package:bnlearn", unload=TRUE)
library("bnlearn", lib.loc="~/R/win-library/3.2")
remove.packages("bnlearn")
install.packages("bnlearn")
library("bnlearn", lib.loc="~/R/win-library/3.2")
install.packages("dynamicGraph")
library("dynamicGraph", lib.loc="~/R/win-library/3.2")
dynamicGraphMain()
library("pcalg", lib.loc="~/R/win-library/3.2")
dynamicGraphMain()
library("pcalg", lib.loc="~/R/win-library/3.2")
library("pcalg")
library(pcalg)
install.packages("Rcpp")
library("pcalg", lib.loc="~/R/win-library/3.2")
install.packages("deal")
library("deal", lib.loc="~/R/win-library/3.2")
drawnetwork()
?rnorm
args("rnorm")
rnorm
dnorm
readtext(url="https://en.wikipedia.org/wiki/Data_science")
readText(url="https://en.wikipedia.org/wiki/Data_science")
find.package("devtools")
find.package("ismev")
install.packages("KernSmooth")
KernSmooth
KernSmooth()
find.package(KernSmooth)
find.package("KernSmooth")
library("KernSmooth", lib.loc="~/R/win-library/3.2")
getwd()
ls()
source
?source
y = c(TRUE, 2)
y
y = c(FALSE, 2)
y
rm(y)
gc()
x = (1:6)
x
x = (0:6)
x
as.logical(x)
x
as.complex(x)
library("pcalg", lib.loc="~/R/win-library/3.2")
library("igraph", lib.loc="~/R/win-library/3.2")
library("ggm", lib.loc="~/R/win-library/3.2")
library("evd", lib.loc="~/R/win-library/3.2")
library("extRemes", lib.loc="~/R/win-library/3.2")
library("bsts", lib.loc="~/R/win-library/3.2")
?read.table
?ifelse
library("Matrix", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("foreign", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("datasets", lib.loc="C:/Program Files/R/R-3.2.0/library")
search()
lm
lm()
?lm
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
make.power(3)
> cube <- make.power(3)
> square <- make.power(2)
cube <- make.power(3)
square <- make.power(2)
cube
cube(2)
square(3)
optimize
optim
nlm
?nlm
#HIstogram of Deaths & Injuries 0n Hazardous Class Code
#HIstogram of Deaths & Injuries 0n Hazardous Class Code
source('C:/Users/Ken/Google Drive/Paper - Hazmat Incident Data/Analyze Hazmat IRs - Serious - 2011 to 2014.R', echo=TRUE)
source('C:/Users/Ken/Google Drive/Paper - Hazmat Incident Data/Analyze Hazmat IRs - Serious - 2011 to 2014.R', echo=TRUE)
y
x
z
Sys.time()
as.posixlt(Sys.time())
as.POSIXlt(Sys.time())
as.POSIXlt(Sys.time())$mday
as.POSIXlt(Sys.time())$q
as.POSIXlt(Sys.time())$quarter
as.POSIXlt(Sys.time())$Q
?strptime
?optim
?optimize
load("C:/Users/Ken/Google Drive/Coursera - Data Science - 2-R Programming/Week 2/Assignment 1/specdata/.RData")
View(table1)
?seq
?seq_len
str(apply)
?apply
x <- matrix(rnorm(200), 20, 10)
apply(x, 2, mean)
apply(x,1, mean)
?rowSums
apply(x, 1, quantile, probs = c(0.25, 0.75))
?quantile
apply(x, 1, quantile, probs = 0.95))
apply(x, 1, quantile, probs = c(0.95))
apply(x, 1, quantile, probs = 0.95)
?mapply
x
mean(x)
traceback()
rm(x)
traceback()
mean(x)
traceback()
debug()
debug(mean(x))
load("C:/Users/Ken/programmingassignment2/programmingassignment2/cachematrix.R")
traceback()
load("C:/Users/Ken/programmingassignment2/programmingassignment2/cachematrix.R")
source("C:/Users/Ken/programmingassignment2/programmingassignment2/cachematrix.R")
View(makeCacheMatrix)
save.image("C:/Users/Ken/programmingassignment2/programmingassignment2/cachematrix.R.RData")
rm(histclass)
rm(histdeaths)
rm(histinjs)
rm(test1000)
rm(test50000)
y
rm(y)
rm(z)
rm(gpdTotDam)
rm(gpdTotDam1000)
rm(gpdTotDam10000)
rm(gpdTotDam100000)
rm(gpdTotDam50000)
rm(LBs)
rm(serIRs)
gc()
save.image("C:/Users/Ken/programmingassignment2/programmingassignment2/cachematrix.R.RData")
save.image("C:/Users/Ken/programmingassignment2/programmingassignment2/cachematrix.R.RData")
setwd("C:/Users/Ken/programmingassignment2/programmingassignment2")
save.image("C:/Users/Ken/programmingassignment2/programmingassignment2/cachematrix.R.RData")
